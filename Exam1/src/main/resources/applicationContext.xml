<?xml version="1.0" encoding="utf-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="
            http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
            http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
            http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
            http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.0.xsd
            http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">
    <!--<context:property-placeholder location="db.properties"/>-->
    <bean id="propertyPlaceholderConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="location" value="classpath:db.properties" />
    </bean>
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
        <property name="driverClassName" value="${driver}"/>
        <property name="url" value="jdbc:mysql://#{systemEnvironment['MYSQL_IP']}:#{systemEnvironment['MYSQL_PORT']}/${dbname}?serverTimezone=GMT&amp;useSSL=false"/>
        <property name="username" value="#{systemEnvironment['USER_NAME']}"/>
        <property name="password" value="#{systemEnvironment['PASS_WORD']}"/>
    </bean>
    <bean id="sqlStatementInterceptor" class="com.hand.infra.util.SqlStatementInterceptor"/>
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
            <property name="dataSource" ref="dataSource"/>
            <!--configLocation属性指定mybatis的核心配置文件-->
        <property name="configLocation" value="applicationContext-mybatis.xml"/>
        <property name="mapperLocations" value="classpath:com/hand/infra/mapper/*.xml"/>
        <property name="plugins">
            <array>
                <bean id="sqlStatementInterceptor" class="com.hand.infra.util.SqlStatementInterceptor" />
            </array>
        </property>
    </bean>
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.hand.infra.mapper"/>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
    </bean>
    <!-- PlatformTransactionMnager -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>
    <tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true"/>

    <bean id="filmService" class="com.hand.api.service.impl.FilmServiceImpl">
        <property name="filmMapper" ref="filmMapper"/>
    </bean>

    <bean id="event" class="com.hand.infra.util.EventUtil"/>

    <!--<aop:config>-->
        <!--<aop:aspect id="insertFilmEvent" ref="event">-->
            <!--<aop:pointcut id="insert" expression="execution(* com.hand.api.service.FilmService.*(..))"/>-->
            <!--<aop:before method="beforeInsertFilmEvent" pointcut-ref="insert"/>-->
            <!--<aop:after method="afterInsertFilmEvent" pointcut-ref="insert"/>-->
        <!--</aop:aspect>-->
    <!--</aop:config>-->

    <bean id="startApplicationContext" class="com.hand.infra.util.StartApplicationContext"/>
    <bean id="stopApplicationContext" class="com.hand.infra.util.StopApplicationContext"/>
    <bean id="afterInsertFilmEventListener" class="com.hand.infra.util.AfterInsertFilmEventListener"/>
    <bean id="beforeInsertFilmEventListener" class="com.hand.infra.util.BeforeInsertFilmEventListener"/>
    <bean id="beforeInsertFilmEventPublisher" class="com.hand.infra.util.BeforeInsertFilmEventPublisher"/>
    <bean id="afterInsertFilmEventPublisher" class="com.hand.infra.util.AfterInsertFilmEventPublisher"/>
</beans>